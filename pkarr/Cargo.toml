[package]
name = "pkarr"
version = "3.0.0"
authors = ["Nuh <nuh@nuh.dev>"]
edition = "2021"
description = "Public-Key Addressable Resource Records (Pkarr); publish and resolve DNS records over Mainline DHT"
homepage = "https://github.com/pubky/pkarr"
license = "MIT"
keywords = ["mainline", "dht", "dns", "decentralized", "identity"]
categories = ["network-programming"]
repository = "https://github.com/pubky/pkarr"

[dependencies]
bytes = "1.9.0"
base32 = "0.5.1"
ed25519-dalek = { version = "2.1.1", features = ["rand_core"] }
self_cell = "1.1.0"
simple-dns = "0.9.3"
thiserror = "2.0.11"
dyn-clone = "1.0.17"
lru = { version = "0.12.5", default-features = false }
serde = { version = "1.0.217", features = ["derive"] }
rand = "0.8.5"

document-features = "0.2.10"

#feat: client dependencies
flume = { version = "0.11.1", features = ["select", "eventual-fairness", "async"], default-features = false , optional = true }
futures-lite = { version = "2.6.0", default-features = false, features= ["std"], optional = true }

# feat: endpoints dependencies
genawaiter = { version = "0.99.1", default-features = false, features = ["futures03"], optional = true }
rstest = "0.24.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing = "0.1.41"
pubky-timestamp = { version = "0.3.0", features = ["full"] }

# feat: dht dependencies
mainline = { git = "https://github.com/pubky/mainline", branch="v5", optional = true, default-features = false }

# feat: relay dependencies
reqwest = { version = "0.12.12", default-features = false, features = ["rustls-tls"], optional = true }
tokio = { version = "1.43.0", optional = true, default-features = false }
sha1_smol = { version = "1.0.1", optional = true }

# feat: lmdb-cache defendencies
heed = { version = "0.21.0", default-features = false, optional = true }
byteorder = { version = "1.5.0", default-features = false, optional = true }
page_size = { version = "0.6.0", optional = true }

# feat: reqwest-builder
webpki-roots = { version = "0.26.7", optional = true }
url = { version = "2.5.4", optional = true }

# feat: tls
rustls = { version = "0.23", default-features = false, features = ["ring"], optional = true }
webpki = { package = "rustls-webpki", version = "0.102", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
pubky-timestamp = { version = "0.3.0", default-features = false, features = ["httpdate"] }
js-sys = "0.3.77"
futures = "0.3.31"
getrandom = { version = "0.2", features = ["js"] }
reqwest = { version = "0.12.12", default-features = false }
wasm-bindgen-futures = "0.4.50"
url = "2.5.4"
log = "0.4.25"

[dev-dependencies]
anyhow = "1.0.95"
postcard = { version = "1.1.1", features = ["alloc"] }
reqwest = "0.12.12"
tokio = { version = "1.43.0", features = ["macros", "rt-multi-thread"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
pkarr-relay = { path = "../relay" }
clap = { version = "4.5.27", features = ["derive"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
mainline = { git = "https://github.com/pubky/mainline", branch="v5" }
tokio-rustls = "0.26.1"
axum = "0.8.1"
axum-server = { version = "0.7.1", features = ["tls-rustls-no-provider"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen = { version = "0.2.100", features = ["serde-serialize"] }
wasm-bindgen-test = "0.3"
console_log = { version = "1.0.0", features = ["color"] }

[features]
# Clients 
## Use [client::Client] with, you have to enable `dht` and / or `relays` features as well.
client = ["dep:flume", "dep:futures-lite"]
## Use [client::Client] with [mainline] support.
dht = ["client", "dep:mainline"]
## Use [client::Client] with [Relays](https://pkarr.org/relays).
relays = ["client", "dep:reqwest", "dep:tokio", "dep:sha1_smol", "dep:url"]

# Extra
## Use [crate::extra::lmdb-cache::LmdbCache]
lmdb-cache = ["dep:heed", "dep:byteorder", "dep:page_size"]

## Use [crate::extra::endpoints] methods according to [endpoints](https://pkarr.org/endpoints) spec.
endpoints = ["client", "dep:genawaiter"]
## Use [rustls::ClientConfig] from [Client] according to [tls](https://pkarr.org/tls) spec.
tls = ["rustls", "ed25519-dalek/pkcs8", "dep:webpki"]

## Use [reqwest::dns::Resolve] trait implementation for [Client].
reqwest-resolve = ["dep:reqwest", "endpoints"]
## Create a [reqwest::ClientBuilder] from [Client].
reqwest-builder = ["client", "tls", "reqwest-resolve"]

## Use all features
full = ["dht", "relays", "endpoints", "lmdb-cache", "reqwest-resolve", "tls", "reqwest-builder"]

default = ["full"]

[package.metadata.docs.rs]
all-features = true

[lints.clippy]
unwrap_used = "deny"

[[example]]
name = "http-get"
required-features = ["reqwest-builder"]

[[example]]
name = "http-serve"
required-features = ["tls"]
